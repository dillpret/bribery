name: Deploy to Oracle Cloud

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'VERSION'  # Ignore changes to just the VERSION file

jobs:
  deploy:
    # Skip workflow if commit message contains [skip ci]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is needed for pushing to the repository
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Need full history for tags
          token: ${{ secrets.GH_PAT }}  # Use PAT for checkout to handle pushes

      - name: Read current version
        id: current_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # Check if tag already exists
          if ! git rev-parse "v${{ steps.current_version.outputs.VERSION }}" >/dev/null 2>&1; then
            echo "Creating tag v${{ steps.current_version.outputs.VERSION }}"
            git tag -a "v${{ steps.current_version.outputs.VERSION }}" -m "Release v${{ steps.current_version.outputs.VERSION }}"
            git push --tags
          else
            echo "Tag v${{ steps.current_version.outputs.VERSION }} already exists, skipping tag creation"
          fi

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}

      - name: Add Oracle instance to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.ORACLE_HOST_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Oracle Cloud
        run: |
          ssh ubuntu@${{ secrets.ORACLE_HOST_IP }} "mkdir -p ~/deployment-temp"
          scp -r ./* ubuntu@${{ secrets.ORACLE_HOST_IP }}:~/deployment-temp/
          ssh ubuntu@${{ secrets.ORACLE_HOST_IP }} "cd ~/deployment-temp && chmod +x deployment/github-actions-update.sh && ./deployment/github-actions-update.sh && rm -rf ~/deployment-temp"
