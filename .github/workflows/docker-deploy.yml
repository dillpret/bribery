name: Deploy to Oracle Cloud

on:
  push:
    branches: [ master ]
  workflow_dispatch:

# Global permissions for all jobs
permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install using the test-specific requirements for running tests
          python -m pip install -r requirements-test.txt
          python -m pip install -r requirements-dev.txt
          
      - name: Run unit tests
        run: |
          python -m pytest tests/unit/ -v

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Changed from 'read' to 'write' to allow creating and pushing tags
      packages: write  # This is needed for pushing to the container registry
    steps:
      - uses: actions/checkout@v3
      
      # Note: We don't need to set up Python here as Docker uses its own Python environment
      
      - name: Read current version
        id: current_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:v${{ steps.current_version.outputs.VERSION }}
          # Add build arguments for better diagnostics
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Better caching for faster builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Create and push Git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ steps.current_version.outputs.VERSION }}" -m "Release version ${{ steps.current_version.outputs.VERSION }}"
          git push origin "v${{ steps.current_version.outputs.VERSION }}"
          
      - name: Deploy to Oracle Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ORACLE_HOST_IP }}
          username: ${{ secrets.ORACLE_USERNAME }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            # Ensure Nginx is installed
            if ! command -v nginx &> /dev/null; then
              echo "Installing Nginx..."
              sudo apt-get update
              sudo apt-get install -y nginx
            fi
            
            # Pull the latest image
            docker pull ghcr.io/${{ github.repository }}:latest
            
            # Stop and remove the existing container if it exists
            docker stop bribery-game || true
            docker rm bribery-game || true
            
            # Run the new container on port 8080 (internal)
            docker run -d --name bribery-game \
              -p 8080:5000 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository }}:latest
            
            # Remove all existing Nginx configs to avoid conflicts
            echo "Removing any existing Nginx configurations..."
            sudo rm -f /etc/nginx/sites-enabled/*
            
            # Configure Nginx as a reverse proxy
            echo "Configuring Nginx as a reverse proxy..."
            sudo tee /etc/nginx/sites-available/bribery-game > /dev/null << 'EOL'
            server {
                listen 80 default_server;
                listen [::]:80 default_server;
                server_name _;
            
                location / {
                    proxy_pass http://127.0.0.1:8080;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                    
                    # WebSocket support (needed for SocketIO)
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "upgrade";
                }
            }
            EOL
            
            # Enable the site
            sudo ln -sf /etc/nginx/sites-available/bribery-game /etc/nginx/sites-enabled/
            
            # Restart Nginx completely
            echo "Restarting Nginx..."
            sudo systemctl restart nginx
            
            # Verify the Docker container is running
            echo "Verifying Docker container status..."
            docker ps
            
            # Verify Nginx is listening on port 80
            echo "Verifying Nginx is listening on port 80..."
            sudo ss -tulpn | grep :80
            
            # Clean up unused images
            docker image prune -f
